"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[5870],{25626:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>g,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var a=o(74848),t=o(28453);const s={title:"Managed MongoDB",description:"Defang can help you provision managed MongoDB instances.",sidebar_position:3e3},r="Managed MongoDB",d={id:"concepts/managed-storage/managed-mongodb",title:"Managed MongoDB",description:"Defang can help you provision managed MongoDB instances.",source:"@site/docs/concepts/managed-storage/managed-mongodb.md",sourceDirName:"concepts/managed-storage",slug:"/concepts/managed-storage/managed-mongodb",permalink:"/docs/concepts/managed-storage/managed-mongodb",draft:!1,unlisted:!1,editUrl:"https://github.com/DefangLabs/defang-docs/tree/main/docs/concepts/managed-storage/managed-mongodb.md",tags:[],version:"current",sidebarPosition:3e3,frontMatter:{title:"Managed MongoDB",description:"Defang can help you provision managed MongoDB instances.",sidebar_position:3e3},sidebar:"docsSidebar",previous:{title:"Managed Redis",permalink:"/docs/concepts/managed-storage/managed-redis"},next:{title:"Managed Object Storage",permalink:"/docs/concepts/managed-storage/managed-object-storage"}},i={},c=[{value:"Current Support",id:"current-support",level:2},{value:"How to use Managed MongoDB",id:"how-to-use-managed-mongodb",level:2},{value:"Required Configuration",id:"required-configuration",level:3},{value:"AWS",id:"aws",level:3},{value:"GCP",id:"gcp",level:3},{value:"Example",id:"example",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"managed-mongodb",children:"Managed MongoDB"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["This feature was introduced in Defang v1.2.0 released on June 3, 2025 for AWS. ",(0,a.jsx)(n.a,{href:"/docs/cli/defang_upgrade",children:"Upgrade to the latest version"})]})}),"\n",(0,a.jsx)(n.p,{children:"Managed MongoDB is a service that allows you to store and retrieve large amounts of data in a document-oriented format. MongoDB is ideal for storing unstructured data like JSON documents, making it a popular choice for modern applications."}),"\n",(0,a.jsx)(n.h2,{id:"current-support",children:"Current Support"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Provider"}),(0,a.jsx)(n.th,{children:"Managed MongoDB"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/docs/providers/playground#managed-services",children:"Playground"})}),(0,a.jsx)(n.td,{children:"\u26a0\ufe0f Unmanaged"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/docs/providers/aws#managed-storage",children:"AWS"})}),(0,a.jsx)(n.td,{children:"\u2705 DocumentDB"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/docs/providers/digitalocean#future-improvements",children:"DigitalOcean"})}),(0,a.jsx)(n.td,{children:"\u26a0\ufe0f Unmanaged"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"/docs/providers/gcp#future-improvements",children:"GCP"})}),(0,a.jsx)(n.td,{children:"\u2705 Firestore"})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"how-to-use-managed-mongodb",children:"How to use Managed MongoDB"}),"\n",(0,a.jsxs)(n.p,{children:["To use managed MongoDB, in your ",(0,a.jsx)(n.code,{children:"compose.yaml"})," file, use the ",(0,a.jsx)(n.code,{children:"x-defang-mongodb"})," extension to define your MongoDB service. Adding the extension will tell Defang to provision a managed instance, rather than running MongoDB as a container."]}),"\n",(0,a.jsx)(n.h3,{id:"required-configuration",children:"Required Configuration"}),"\n",(0,a.jsx)(n.h3,{id:"aws",children:"AWS"}),"\n",(0,a.jsxs)(n.p,{children:["When using managed MongoDB on AWS, you ",(0,a.jsx)(n.strong,{children:"must"})," set a username and password for the database. By default, these are read from the ",(0,a.jsx)(n.code,{children:"MONGO_INITDB_ROOT_USERNAME"})," and ",(0,a.jsx)(n.code,{children:"MONGO_INITDB_ROOT_PASSWORD"})," config variables, following ",(0,a.jsx)(n.a,{href:"https://hub.docker.com/_/mongo",children:"the official MongoDB container image"})," convention."]}),"\n",(0,a.jsx)(n.p,{children:"You can set these using the following commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"defang config set MONGO_INITDB_ROOT_USERNAME <your-username>\ndefang config set MONGO_INITDB_ROOT_PASSWORD <your-password>\n"})}),"\n",(0,a.jsx)(n.p,{children:"If you do not provide these values, the deployment will fail."}),"\n",(0,a.jsx)(n.h3,{id:"gcp",children:"GCP"}),"\n",(0,a.jsxs)(n.p,{children:["When using managed MongoDB on GCP, you ",(0,a.jsx)(n.strong,{children:"must"})," set a ",(0,a.jsx)(n.code,{children:"MONGO_INITDB_DATABASE"})," environment variable with the name of the database to create."]}),"\n",(0,a.jsxs)(n.p,{children:["Defang will automatically create a config variable named ",(0,a.jsx)(n.code,{children:"<SERVICE_NAME>_URL"})," that contains the connection string for your MongoDB database. For example, if your service is named ",(0,a.jsx)(n.code,{children:"db"}),", the config variable will be ",(0,a.jsx)(n.code,{children:"DB_URL"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Important:"})," GCP will ignore ",(0,a.jsx)(n.code,{children:"MONGO_INITDB_ROOT_USERNAME"})," and ",(0,a.jsx)(n.code,{children:"MONGO_INITDB_ROOT_PASSWORD"})," credentials since they are not needed. GCP automatically handles authentication and grants your service access to the MongoDB database."]}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"services:\n  app:\n    # [...]\n    environment:\n      DB_URL: mongodb://$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@db:27017/\n    depends_on:\n      - db\n\n  db:\n    image: mongo:5\n    x-defang-mongodb: true\n    environment:\n      MONGO_INITDB_DATABASE: mydb\n"})}),"\n",(0,a.jsx)(n.admonition,{title:"Deleting a GCP Firestore MongoDB Database",type:"warning",children:(0,a.jsxs)(n.p,{children:["Please be aware that GCP Firestore does not allow deletion of your database when you bring down your project using ",(0,a.jsx)(n.code,{children:"defang compose down"}),". You must go to the ",(0,a.jsx)(n.a,{href:"https://console.cloud.google.com/firestore/databases/",children:"GCP Cloud Console for Firestore"})," to delete it manually."]})}),"\n",(0,a.jsxs)(n.admonition,{title:"Version",type:"warning",children:[(0,a.jsxs)(n.p,{children:["AWS DocumentDB is compatible with MongoDB 3.6, 4.0, and 5.0. The ",(0,a.jsx)(n.code,{children:"mongo:5"})," image is compatible with DocumentDB 5.0, so we recommend using this version for your MongoDB service. Deployment will fail for versions higher than 5."]}),(0,a.jsx)(n.p,{children:"GCP Firestore does not have a configurable version."})]})]})}function g(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>d});var a=o(96540);const t={},s=a.createContext(t);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);