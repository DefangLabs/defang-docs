"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[5848],{14960:(e,t,o)=>{o.d(t,{A:()=>n});const n=o.p+"assets/images/mcp-7b7325a04c3e33149a75dc1affd92abf.png"},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>s});var n=o(96540);const a={},l=n.createContext(a);function i(e){const t=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(l.Provider,{value:t},e.children)}},51331:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var n=o(77658),a=o(74848),l=o(28453);const i={title:"Simplifying Deployment of AI Apps to the Cloud using Docker and Model Context Protocol",tags:["Cloud","NoDevOps","BYOC","GCP","DigitalOcean","AWS","CLI","AI","MCP","Model Context Protocol","Chatbot","Docker"],authors:"defang_team"},s=void 0,r={authorsImageUrls:[void 0]},c=[];function p(e){const t={a:"a",img:"img",p:"p",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"mcp",src:o(14960).A+"",width:"2108",height:"1196"})}),"\n",(0,a.jsxs)(t.p,{children:["Anthropic recently unveiled the\xa0",(0,a.jsx)(t.a,{href:"https://www.anthropic.com/news/model-context-protocol",children:"Model Context Protocol"}),"\xa0(MCP), \u201ca new standard for connecting AI assistants to the systems where data lives\u201d. However, as Docker ",(0,a.jsx)(t.a,{href:"https://www.docker.com/blog/the-model-context-protocol-simplifying-building-ai-apps-with-anthropic-claude-desktop-and-docker/",children:"pointed out"}),", \u201cpackaging and distributing MCP Servers is very challenging due to complex environment setups across multiple architectures and operating systems\u201d. Docker ",(0,a.jsx)(t.a,{href:"https://www.docker.com/blog/the-model-context-protocol-simplifying-building-ai-apps-with-anthropic-claude-desktop-and-docker/",children:"helps to solve this problem"})," by enabling developers to \u201cencapsulate their development environment into containers, ensuring consistency across all team members\u2019 machines and deployments.\u201d The Docker work includes a list of ",(0,a.jsx)(t.a,{href:"https://github.com/modelcontextprotocol/servers",children:"reference MCP Servers"})," packaged up as containers, which you can deploy locally and test your AI application."]}),"\n",(0,a.jsxs)(t.p,{children:["However, to put such containerized AI applications into production, you need to be able to not only test locally, but also easily deploy the application to the cloud. This is what Defang enables. In this blog and the accompanying ",(0,a.jsx)(t.a,{href:"https://github.com/DefangLabs/samples/tree/main/samples/mcp",children:"sample"}),", we show how to build a sample AI application using one of the reference MCP Servers, run and test it locally using Docker, and when ready, to easily deploy it to the cloud of your choice (AWS, GCP, or DigitalOcean) using Defang."]})]})}function d(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},77658:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/02/18/model-context-protocol","source":"@site/blog/2025-02-18-model-context-protocol.md","title":"Simplifying Deployment of AI Apps to the Cloud using Docker and Model Context Protocol","description":"mcp","date":"2025-02-18T00:00:00.000Z","tags":[{"inline":true,"label":"Cloud","permalink":"/blog/tags/cloud"},{"inline":true,"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"inline":true,"label":"BYOC","permalink":"/blog/tags/byoc"},{"inline":true,"label":"GCP","permalink":"/blog/tags/gcp"},{"inline":true,"label":"DigitalOcean","permalink":"/blog/tags/digital-ocean"},{"inline":true,"label":"AWS","permalink":"/blog/tags/aws"},{"inline":true,"label":"CLI","permalink":"/blog/tags/cli"},{"inline":true,"label":"AI","permalink":"/blog/tags/ai"},{"inline":true,"label":"MCP","permalink":"/blog/tags/mcp"},{"inline":true,"label":"Model Context Protocol","permalink":"/blog/tags/model-context-protocol"},{"inline":true,"label":"Chatbot","permalink":"/blog/tags/chatbot"},{"inline":true,"label":"Docker","permalink":"/blog/tags/docker"}],"readingTime":7.43,"hasTruncateMarker":true,"authors":[{"name":"Defang Team","title":"Defang Team","url":"https://defang.io","imageURL":"/img/defang-logo.svg","key":"defang_team","page":null}],"frontMatter":{"title":"Simplifying Deployment of AI Apps to the Cloud using Docker and Model Context Protocol","tags":["Cloud","NoDevOps","BYOC","GCP","DigitalOcean","AWS","CLI","AI","MCP","Model Context Protocol","Chatbot","Docker"],"authors":"defang_team"},"unlisted":false,"prevItem":{"title":"Introducing Defang\'s New Look: Website & Logo Refresh","permalink":"/blog/2025/03/12/website-logo-refresh-announcement"},"nextItem":{"title":"January 2025 Defang Compose Update","permalink":"/blog/2025/02/07/january-product-updates"}}')}}]);