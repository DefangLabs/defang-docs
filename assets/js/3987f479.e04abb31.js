"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[1722],{28453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>c});var t=n(96540);const s={},r=t.createContext(s);function i(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:o},e.children)}},50771:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"cli/defang_compose_logs","title":"defang compose logs","description":"Show logs from one or more services","source":"@site/docs/cli/defang_compose_logs.md","sourceDirName":"cli","slug":"/cli/defang_compose_logs","permalink":"/docs/cli/defang_compose_logs","draft":false,"unlisted":false,"editUrl":"https://github.com/DefangLabs/defang-docs/tree/main/docs/cli/defang_compose_logs.md","tags":[],"version":"current","frontMatter":{"title":"defang compose logs"},"sidebar":"docsSidebar","previous":{"title":"defang compose down","permalink":"/docs/cli/defang_compose_down"},"next":{"title":"defang compose ps","permalink":"/docs/cli/defang_compose_ps"}}');var s=n(74848),r=n(28453);const i={title:"defang compose logs"},c=void 0,l={},a=[{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 4-Oct-2025",id:"auto-generated-by-spf13cobra-on-4-oct-2025",level:6}];function d(e){const o={a:"a",code:"code",h3:"h3",h6:"h6",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.p,{children:"Show logs from one or more services"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"defang compose logs [SERVICE...] [flags]\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Aliases: ",(0,s.jsx)(o.code,{children:"tail"})]}),"\n",(0,s.jsx)(o.h3,{id:"options",children:"Options"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"      --deployment string   deployment ID of the service\n      --filter string       only show logs containing given text; case-insensitive\n  -h, --help                help for logs\n  -r, --raw                 show raw (unparsed) logs\n      --since string        show logs since duration/time\n      --type log-type       show logs of type; one of [RUN BUILD ALL] (default RUN)\n      --until string        show logs until duration/time\n      --utc                 show logs in UTC timezone (ie. TZ=UTC)\n"})}),"\n",(0,s.jsx)(o.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --color color-mode        colorize output; one of [never auto always] (default auto)\n  -C, --cwd string              change directory before running the command\n      --debug                   debug logging for troubleshooting the CLI\n      --dry-run                 dry run (don\'t actually change anything)\n  -f, --file stringArray        compose file path(s)\n  -T, --non-interactive         disable interactive prompts / no TTY (default true)\n      --org string              override GitHub organization name (tenant)\n  -p, --project-name string     project name\n  -P, --provider provider       bring-your-own-cloud provider; one of [defang aws digitalocean gcp] (default auto)\n      --pulumi-backend string   specify an alternate Pulumi backend URL or "pulumi-cloud"\n  -v, --verbose                 verbose logging\n'})}),"\n",(0,s.jsx)(o.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.a,{href:"/docs/cli/defang_compose",children:"defang compose"}),"\t - Work with local Compose files"]}),"\n"]}),"\n",(0,s.jsx)(o.h6,{id:"auto-generated-by-spf13cobra-on-4-oct-2025",children:"Auto generated by spf13/cobra on 4-Oct-2025"})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);