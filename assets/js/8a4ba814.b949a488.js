"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[9336],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,m=c["".concat(s,".").concat(d)]||c[d]||g[d]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},307:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i=void 0,l={unversionedId:"Tutorial/Tutorial",id:"Tutorial/Tutorial",title:"Tutorial",description:"Tutorial",source:"@site/docs/Tutorial/Tutorial.md",sourceDirName:"Tutorial",slug:"/Tutorial/",permalink:"/docs/Tutorial/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Tutorial/Tutorial.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FAQ",permalink:"/docs/FAQ"},next:{title:"Download CLI",permalink:"/docs/Tutorial/Download CLI"}},s={},p=[{value:"<strong>Tutorial</strong>",id:"tutorial",level:2},{value:"<strong>Downloading CLI</strong>",id:"downloading-cli",level:3},{value:"<strong>CLI Commands</strong>",id:"cli-commands",level:3},{value:"<strong>Generating code using AI assistance</strong>",id:"generating-code-using-ai-assistance",level:3},{value:"Using Docker Compose YML",id:"using-docker-compose-yml",level:3},{value:"Using Defang CLI Imperatively",id:"using-defang-cli-imperatively",level:3},{value:"Using the Defang TypeScript Pulumi provider:",id:"using-the-defang-typescript-pulumi-provider",level:3},{value:"<strong>Monitoring your app</strong>",id:"monitoring-your-app",level:3},{value:"<strong>Upgrading your app</strong>",id:"upgrading-your-app",level:3}],u={toc:p},c="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"tutorial"},(0,a.kt)("strong",{parentName:"h2"},"Tutorial")),(0,a.kt)("h3",{id:"downloading-cli"},(0,a.kt)("strong",{parentName:"h3"},"Downloading CLI")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"go install \u2026\nnix-env \u2026\nnix profile \u2026\nbrew install \u2026\n")),(0,a.kt)("h3",{id:"cli-commands"},(0,a.kt)("strong",{parentName:"h3"},"CLI Commands")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"defang help\ndefang version\ndefang login\n")),(0,a.kt)("h3",{id:"generating-code-using-ai-assistance"},(0,a.kt)("strong",{parentName:"h3"},"Generating code using AI assistance")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"defang generate\n")),(0,a.kt)("h3",{id:"using-docker-compose-yml"},"Using Docker Compose YML"),(0,a.kt)("p",null,"Create a new file  ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," with the following contents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"services:\n  service1:\n        image: nginx:latest\n")),(0,a.kt)("p",null,"Build and deploy your app to your environment:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"defang compose up --tail\n")),(0,a.kt)("h3",{id:"using-defang-cli-imperatively"},"Using Defang CLI Imperatively"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Using the Defang CLI imperatively with a pre-built container image:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"defang up --name service1 --image \u2026 --tail\n"))),(0,a.kt)("li",{parentName:"ul"},"Using the Defang CLI imperatively, building from local sources:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"defang up --name service1 --build . --tail\n")))),(0,a.kt)("h3",{id:"using-the-defang-typescript-pulumi-provider"},"Using the Defang TypeScript Pulumi provider:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'const image = new docker.Image("\u2026", {\n    context: ".",\n});\n\nconst service1 = new defang.Service("\u2026", {\n    image: image.url,\n});\n')),(0,a.kt)("p",null,"By default, Pulumi will not touch the deployment if nothing has changed. Set ",(0,a.kt)("inlineCode",{parentName:"p"},"forceNewDeployment: true")," to instruct Pulumi to force the re-deployment of the service."),(0,a.kt)("h3",{id:"monitoring-your-app"},(0,a.kt)("strong",{parentName:"h3"},"Monitoring your app")),(0,a.kt)("p",null,"By default, all the output (stdout and stderr) from your app is routed through the Defang log cluster. You can view these logs in real-time. You can view logs for all your services, one service, or even one specific deployment of a service."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"From the CLI:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"defang tail --name service1\n"))),(0,a.kt)("li",{parentName:"ul"},"From the Defang portal:","  ",(0,a.kt)("a",{parentName:"li",href:"https://portal.defang.io/"},"https://portal.defang.io/"))),(0,a.kt)("h3",{id:"upgrading-your-app"},(0,a.kt)("strong",{parentName:"h3"},"Upgrading your app")),(0,a.kt)("p",null,"To upgrade your app (for example, updating the base image of your container) you can run the same update command as before and it will build and deploy the latest version. Your current version of the service will keep running and handling traffic while the new version is being built and deployed. Only after the new version passes the health checks and accepts traffic will the older version be stopped."))}g.isMDXComponent=!0}}]);