"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[490],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var t=r(96540);const o={},i=t.createContext(o);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},54422:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>a});var t=r(74848),o=r(28453);const i={title:"Deploying your OpenAI Application to AWS Bedrock or GCP Vertex AI",sidebar_position:50},s="Deploying your OpenAI Application to AWS Bedrock or GCP Vertex AI",l={id:"tutorials/deploying-openai-apps-aws-bedrock-gcp-vertex",title:"Deploying your OpenAI Application to AWS Bedrock or GCP Vertex AI",description:"Let's assume you have an app that uses an OpenAI client library and you want to deploy it to the cloud, either on AWS Bedrock or GCP Vertex AI.",source:"@site/docs/tutorials/deploying-openai-apps-aws-bedrock-gcp-vertex.mdx",sourceDirName:"tutorials",slug:"/tutorials/deploying-openai-apps-aws-bedrock-gcp-vertex",permalink:"/docs/tutorials/deploying-openai-apps-aws-bedrock-gcp-vertex",draft:!1,unlisted:!1,editUrl:"https://github.com/DefangLabs/defang-docs/tree/main/docs/tutorials/deploying-openai-apps-aws-bedrock-gcp-vertex.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{title:"Deploying your OpenAI Application to AWS Bedrock or GCP Vertex AI",sidebar_position:50},sidebar:"docsSidebar",previous:{title:"Deploy to Playground",permalink:"/docs/tutorials/deploy-to-playground"},next:{title:"Generate Project Outlines With AI",permalink:"/docs/tutorials/generate-new-code-using-ai"}},c={},a=[{value:"Add an LLM Service to Your Compose File",id:"add-an-llm-service-to-your-compose-file",level:2},{value:"Notes:",id:"notes",level:3},{value:"Redirect Application Traffic",id:"redirect-application-traffic",level:2},{value:"Selecting a Model",id:"selecting-a-model",level:2}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"deploying-your-openai-application-to-aws-bedrock-or-gcp-vertex-ai",children:"Deploying your OpenAI Application to AWS Bedrock or GCP Vertex AI"}),"\n",(0,t.jsxs)(n.p,{children:["Let's assume you have an app that uses an OpenAI client library and you want to deploy it to the cloud, either on ",(0,t.jsx)(n.strong,{children:"AWS Bedrock"})," or ",(0,t.jsx)(n.strong,{children:"GCP Vertex AI"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["This tutorial shows you how ",(0,t.jsx)(n.strong,{children:"Defang"})," makes it easy."]}),"\n",(0,t.jsx)(n.p,{children:"Suppose you start with a compose file like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  app:\n    build:\n      context: .\n    ports:\n      - 3000:3000\n    environment:\n      OPENAI_API_KEY:\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:3000/"]\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"add-an-llm-service-to-your-compose-file",children:"Add an LLM Service to Your Compose File"}),"\n",(0,t.jsx)(n.p,{children:"You need to add a new service that acts as a proxy between your app and the backend LLM provider (Bedrock or Vertex)."}),"\n",(0,t.jsxs)(n.p,{children:["Add ",(0,t.jsxs)(n.strong,{children:["Defang's ",(0,t.jsx)(n.a,{href:"https://github.com/DefangLabs/openai-access-gateway",children:"openai-access-gateway"})]})," service:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",children:"+  llm:\n+    image: defangio/openai-access-gateway\n+    x-defang-llm: true\n+    ports:\n+      - target: 80\n+        published: 80\n+        mode: host\n+    environment:\n+      - OPENAI_API_KEY\n+      - GCP_PROJECT_ID # if using GCP Vertex AI\n+      - GCP_REGION # if using GCP Vertex AI, AWS_REGION not necessary for Bedrock\n"})}),"\n",(0,t.jsx)(n.h3,{id:"notes",children:"Notes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The container image is based on ",(0,t.jsx)(n.a,{href:"https://github.com/aws-samples/bedrock-access-gateway",children:"aws-samples/bedrock-access-gateway"}),", with enhancements."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"x-defang-llm: true"})," signals to ",(0,t.jsx)(n.strong,{children:"Defang"})," that this service should be configured to use target platform AI services."]}),"\n",(0,t.jsxs)(n.li,{children:["New environment variables:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"GCP_PROJECT_ID"})," and ",(0,t.jsx)(n.code,{children:"GCP_REGION"})," are needed if using ",(0,t.jsx)(n.strong,{children:"Vertex AI"}),". (e.g.",(0,t.jsx)(n.code,{children:" GCP_PROJECT_ID"})," = my-project-456789 and ",(0,t.jsx)(n.code,{children:"GCP_REGION"})," = us-central1)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"OpenAI Key"})}),(0,t.jsxs)(n.p,{children:["You no longer need your original OpenAI API Key.",(0,t.jsx)(n.br,{}),"\n","We recommend generating a random secret for authentication with the gateway:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"defang config set OPENAI_API_KEY --random\n"})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"redirect-application-traffic",children:"Redirect Application Traffic"}),"\n",(0,t.jsxs)(n.p,{children:["Modify your ",(0,t.jsx)(n.code,{children:"app"})," service to send API calls to the ",(0,t.jsx)(n.code,{children:"openai-access-gateway"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",children:' services:\n   app:\n     ports:\n       - 3000:3000\n     environment:\n       OPENAI_API_KEY:\n+      OPENAI_BASE_URL: "http://llm/api/v1"\n     healthcheck:\n       test: ["CMD", "curl", "-f", "http://localhost:3000/"]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Now, all OpenAI traffic will be routed through your gateway service and onto AWS Bedrock or GCP Vertex."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"selecting-a-model",children:"Selecting a Model"}),"\n",(0,t.jsx)(n.p,{children:"You should configure your application to specify the model you want to use."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-diff",children:' services:\n   app:\n     ports:\n       - 3000:3000\n     environment:\n       OPENAI_API_KEY:\n       OPENAI_BASE_URL: "http://llm/api/v1"\n+      MODEL: "anthropic.claude-3-sonnet-20240229-v1:0" # for Bedrock\n+      # MODEL: "google/gemini-2.5-pro-preview-03-25" # for Vertex AI\n     healthcheck:\n       test: ["CMD", "curl", "-f", "http://localhost:3000/"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Choose the correct ",(0,t.jsx)(n.code,{children:"MODEL"})," depending on which cloud provider you are using."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Choosing the Right Model"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.strong,{children:"AWS Bedrock"}),", use a Bedrock model ID (e.g., ",(0,t.jsx)(n.code,{children:"anthropic.claude-3-sonnet-20240229-v1:0"}),") ",(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/bedrock/latest/userguide/models-supported.html",children:"See available Bedrock models"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.strong,{children:"GCP Vertex AI"}),", use a full model path (e.g., ",(0,t.jsx)(n.code,{children:"google/gemini-2.5-pro-preview-03-25"}),") ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/vertex-ai/generative-ai/docs/multimodal/call-vertex-using-openai-library#client-setup",children:"See available Vertex models"})]}),"\n"]}),(0,t.jsx)(n.h1,{id:"complete-example-compose-file",children:"Complete Example Compose File"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'services:\n  app:\n    build:\n      context: .\n    ports:\n      - 3000:3000\n    environment:\n      OPENAI_API_KEY:\n      OPENAI_BASE_URL: "http://llm/api/v1"\n      MODEL: "anthropic.claude-3-sonnet-20240229-v1:0" # or your Vertex AI model path\n    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:3000/"]\n\n  llm:\n    image: defangio/openai-access-gateway\n    x-defang-llm: true\n    ports:\n      - target: 80\n        published: 80\n        mode: host\n    environment:\n      - OPENAI_API_KEY\n      - GCP_PROJECT_ID     # required if using Vertex AI\n      - GCP_REGION         # required if using Vertex AI\n'})}),(0,t.jsx)(n.hr,{}),(0,t.jsx)(n.h1,{id:"environment-variable-matrix",children:"Environment Variable Matrix"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Variable"}),(0,t.jsx)(n.th,{children:"AWS Bedrock"}),(0,t.jsx)(n.th,{children:"GCP Vertex AI"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GCP_PROJECT_ID"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:"(not used)"})}),(0,t.jsx)(n.td,{children:"Required"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GCP_REGION"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:"(not used)"})}),(0,t.jsx)(n.td,{children:"Required"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"MODEL"})}),(0,t.jsx)(n.td,{children:"Bedrock model ID"}),(0,t.jsx)(n.td,{children:"Vertex model path"})]})]})]}),(0,t.jsx)(n.hr,{}),(0,t.jsx)(n.p,{children:"You now have a single app that can:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Talk to ",(0,t.jsx)(n.strong,{children:"AWS Bedrock"})," or ",(0,t.jsx)(n.strong,{children:"GCP Vertex AI"})]}),"\n",(0,t.jsx)(n.li,{children:"Use the same OpenAI-compatible client code"}),"\n",(0,t.jsx)(n.li,{children:"Easily switch cloud providers by changing a few environment variables"}),"\n"]})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);