"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[6568],{28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(96540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},85804:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"cli/defang_tail","title":"defang tail","description":"Show logs from one or more services","source":"@site/docs/cli/defang_tail.md","sourceDirName":"cli","slug":"/cli/defang_tail","permalink":"/docs/cli/defang_tail","draft":false,"unlisted":false,"editUrl":"https://github.com/DefangLabs/defang-docs/tree/main/docs/cli/defang_tail.md","tags":[],"version":"current","frontMatter":{"title":"defang tail"},"sidebar":"docsSidebar","previous":{"title":"defang services","permalink":"/docs/cli/defang_services"},"next":{"title":"defang terms","permalink":"/docs/cli/defang_terms"}}');var r=o(74848),i=o(28453);const s={title:"defang tail"},a=void 0,l={},d=[{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 17-Oct-2025",id:"auto-generated-by-spf13cobra-on-17-oct-2025",level:6}];function c(e){const n={a:"a",code:"code",h3:"h3",h6:"h6",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Show logs from one or more services"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"defang tail [SERVICE...] [flags]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Aliases: ",(0,r.jsx)(n.code,{children:"logs"})]}),"\n",(0,r.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"      --deployment string   deployment ID of the service\n      --filter string       only show logs containing given text; case-insensitive\n  -h, --help                help for tail\n  -r, --raw                 show raw (unparsed) logs\n      --since string        show logs since duration/time\n      --type log-type       show logs of type; one of [RUN BUILD ALL] (default RUN)\n      --until string        show logs until duration/time\n      --utc                 show logs in UTC timezone (ie. TZ=UTC)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"      --color color-mode      colorize output; one of [never auto always] (default auto)\n  -C, --cwd string            change directory before running the command\n      --debug                 debug logging for troubleshooting the CLI\n      --dry-run               dry run (don't actually change anything)\n  -f, --file stringArray      compose file path(s)\n  -T, --non-interactive       disable interactive prompts / no TTY (default true)\n      --org string            override GitHub organization name (tenant)\n  -p, --project-name string   project name\n  -P, --provider provider     bring-your-own-cloud provider; one of [defang aws digitalocean gcp] (default auto)\n  -v, --verbose               verbose logging\n"})}),"\n",(0,r.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/docs/cli/defang",children:"defang"}),"\t - Defang CLI is used to take your app from Docker Compose to a secure and scalable deployment on your favorite cloud in minutes."]}),"\n"]}),"\n",(0,r.jsx)(n.h6,{id:"auto-generated-by-spf13cobra-on-17-oct-2025",children:"Auto generated by spf13/cobra on 17-Oct-2025"})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);