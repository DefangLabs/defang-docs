"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[7307],{28453:(e,s,i)=>{i.d(s,{R:()=>c,x:()=>t});var n=i(96540);const o={},r=n.createContext(o);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(r.Provider,{value:s},e.children)}},35208:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});var n=i(74848),o=i(28453);const r={sidebar_position:550,title:"Scaling Your Services",description:"How to scale services deployed with Defang"},c="Scaling Your Services",t={id:"tutorials/scaling-your-services",title:"Scaling Your Services",description:"How to scale services deployed with Defang",source:"@site/docs/tutorials/scaling-your-services.mdx",sourceDirName:"tutorials",slug:"/tutorials/scaling-your-services",permalink:"/docs/tutorials/scaling-your-services",draft:!1,unlisted:!1,editUrl:"https://github.com/DefangLabs/defang-docs/tree/main/docs/tutorials/scaling-your-services.mdx",tags:[],version:"current",sidebarPosition:550,frontMatter:{sidebar_position:550,title:"Scaling Your Services",description:"How to scale services deployed with Defang"},sidebar:"docsSidebar",previous:{title:"Updating Your Services",permalink:"/docs/tutorials/updating-your-services"},next:{title:"How to Use Your Own Domain",permalink:"/docs/tutorials/use-your-own-domain-name"}},l={},a=[{value:"Scaling Resource Reservations",id:"scaling-resource-reservations",level:2},{value:"Scaling with Replicas",id:"scaling-with-replicas",level:2},{value:"Autoscaling Your Services",id:"autoscaling-your-services",level:2},{value:"Enabling Autoscaling",id:"enabling-autoscaling",level:3}];function d(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"scaling-your-services",children:"Scaling Your Services"}),"\n",(0,n.jsx)(s.p,{children:"This tutorial will show you how to scale your services with Defang."}),"\n",(0,n.jsx)(s.p,{children:"There are two primary ways to scale a service. The first way is to increase the resources allocated to a service. For example, giving a service more CPUs or memory. The second way is to deploy multiple instances of a service. This is called scaling with replicas. Defang makes it easy to do both."}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.em,{children:"Compose Specification"}),", which is used by Defang, includes a ",(0,n.jsxs)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/deploy.md",children:[(0,n.jsx)(s.code,{children:"deploy"})," section"]})," which allows you to configure the deployment configuration for a service. This includes your service's resource requirements and the number of replicas of a service should be deployed."]}),"\n",(0,n.jsx)(s.h2,{id:"scaling-resource-reservations",children:"Scaling Resource Reservations"}),"\n",(0,n.jsxs)(s.p,{children:["In order to scale a service's resource reservations, you will need to update the ",(0,n.jsx)(s.code,{children:"deploy"})," section associated with your service in your application's ",(0,n.jsx)(s.code,{children:"compose.yaml"})," file."]}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/deploy.md#resources",children:(0,n.jsx)(s.code,{children:"resources"})})," section to specify the resource reservation requirements. These are the minimum resources which must be available for the platform to provision your service. You may end up with more resources than you requested, but you will never be allocated less."]}),"\n",(0,n.jsxs)(s.p,{children:["For example, if my app needs 2 CPUs and 512MB of memory, I would update the ",(0,n.jsx)(s.code,{children:"compose.yaml"})," file like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'services:\n  my_service:\n    image: my_app:latest\n    deploy:\n      resources:\n        reservations:\n          cpus: "2"\n          memory: "512M"\n'})}),"\n",(0,n.jsx)(s.p,{children:"The minimum resources which can be reserved:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Resource"}),(0,n.jsx)(s.th,{children:"Minimum"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"CPUs"}),(0,n.jsx)(s.td,{children:"0.5"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Memory"}),(0,n.jsx)(s.td,{children:"512M"})]})]})]}),"\n",(0,n.jsx)(s.admonition,{type:"info",children:(0,n.jsxs)(s.p,{children:["Note that the ",(0,n.jsx)(s.code,{children:"memory"})," field must be specified as a ",(0,n.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/11-extension.md#specifying-byte-values",children:'"byte value string"'})," using the ",(0,n.jsx)(s.code,{children:"{amount}{byte unit}"})," format. The supported units are ",(0,n.jsx)(s.code,{children:"b"})," (bytes), ",(0,n.jsx)(s.code,{children:"k"})," or ",(0,n.jsx)(s.code,{children:"kb"})," (kilobytes), ",(0,n.jsx)(s.code,{children:"m"})," or ",(0,n.jsx)(s.code,{children:"mb"})," (megabytes) and ",(0,n.jsx)(s.code,{children:"g"})," or ",(0,n.jsx)(s.code,{children:"gb"})," (gigabytes)."]})}),"\n",(0,n.jsx)(s.h2,{id:"scaling-with-replicas",children:"Scaling with Replicas"}),"\n",(0,n.jsxs)(s.p,{children:["In order to scale a service's replica count, you will need to update the ",(0,n.jsx)(s.code,{children:"deploy"})," section associated with your service in your application's ",(0,n.jsx)(s.code,{children:"compose.yaml"})," file."]}),"\n",(0,n.jsxs)(s.p,{children:["Use the ",(0,n.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/deploy.md#replicas",children:(0,n.jsx)(s.code,{children:"replicas"})})," section to specify the number of containers which should be running at any given time."]}),"\n",(0,n.jsxs)(s.p,{children:["For example, if I want to run 3 instances of my app, I would update the ",(0,n.jsx)(s.code,{children:"compose.yaml"})," file like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"services:\n  my_service:\n    image: my_app:latest\n    deploy:\n      replicas: 3\n"})}),"\n",(0,n.jsx)(s.h2,{id:"autoscaling-your-services",children:"Autoscaling Your Services"}),"\n",(0,n.jsx)(s.p,{children:"Autoscaling allows your services to automatically adjust the number of replicas based on CPU usage \u2014 helping you scale up during traffic spikes and scale down during quieter periods."}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Note:"})," Autoscaling is only available to ",(0,n.jsx)(s.strong,{children:"Pro"})," tier or higher users."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"enabling-autoscaling",children:"Enabling Autoscaling"}),"\n",(0,n.jsxs)(s.p,{children:["To enable autoscaling for a service, add the ",(0,n.jsx)(s.code,{children:"x-defang-autoscaling: true"})," extension under the service definition in your ",(0,n.jsx)(s.code,{children:"compose.yaml"})," file."]}),"\n",(0,n.jsx)(s.p,{children:"Example:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:"services:\n  web:\n    image: myorg/web:latest\n    ports:\n      - 80:80\n    x-defang-autoscaling: true\n"})}),"\n",(0,n.jsx)(s.p,{children:"Once deployed, your services' CPU usage is monitored for how much load it is handling, sustained high loads will result in more replicas being started."}),"\n",(0,n.jsx)(s.p,{children:"Requirements"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"BYOC, your own cloud platform account."}),"\n",(0,n.jsxs)(s.li,{children:["You must be on the Pro or higher plan to use autoscaling. (",(0,n.jsx)(s.a,{href:"https://defang.io/#pricing",children:"Defang plans"}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["Only staging and production deployment modes supported. (",(0,n.jsx)(s.a,{href:"/docs/concepts/deployment-modes",children:"Deployment modes"}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["The service must be stateless or able to run in multiple instances. (",(0,n.jsx)(s.a,{href:"/docs/concepts/scaling",children:"Scaling"}),")"]}),"\n",(0,n.jsx)(s.li,{children:"Only CPU metrics are used for scaling decisions."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Best Practices"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Design your services to be horizontally scalable. (",(0,n.jsx)(s.a,{href:"https://12factor.net/processes",children:"12 Factor App"}),")"]}),"\n",(0,n.jsxs)(s.li,{children:["Use shared or external storage if your service writes data. (e.g. Postgres or Redis ",(0,n.jsx)(s.a,{href:"/docs/concepts/managed-storage",children:"managed services"})," )"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);