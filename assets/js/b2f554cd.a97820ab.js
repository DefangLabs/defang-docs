"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[6880],{8256:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"2024-07-31-product-update","metadata":{"permalink":"/blog/2024-07-31-product-update","source":"@site/blog/2024-07-31-july-product-updates-2.md","title":"July 2024 Product Update","description":"Defang Compose Update","date":"2024-07-31T00:00:00.000Z","formattedDate":"July 31, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"CLI","permalink":"/blog/tags/cli"},{"label":"AI","permalink":"/blog/tags/ai"},{"label":"Debugging","permalink":"/blog/tags/debugging"}],"readingTime":2.825,"hasTruncateMarker":false,"authors":[{"name":"Defang Team"}],"frontMatter":{"slug":"2024-07-31-product-update","title":"July 2024 Product Update","tags":["Cloud","NoDevOps","BYOC","CLI","AI","Debugging"],"author":"Defang Team"},"unlisted":false,"nextItem":{"title":"June 2024 Product Update","permalink":"/blog/july-2024-product-update"}},"content":"![Defang Compose Update](/img/defang-compose-update.webp)\\n\\nHey folks! We can\u2019t believe a month has gone by already, time flies when you\u2019re having fun! We continued to make progress on our vision of providing a radically simpler way to Develop, Deploy, and Debug cloud applications. In July, we spent time on a couple of key areas:\\n\\n1.  As our user-base grows, we wanted to make sure we\u2019re able to scale our [Playground](https://docs.defang.io/docs/concepts/defang-playground) environment to be able to handle the load. This involved being able to shard the workload across multiple ALBs and being able to dynamically move some workloads  across shards where possible. With these changes, we are now able handle a large number of concurrent users comfortably. The only noticeable change in behavior you would see is that Defang will now ask you to \u201c`compose down`\u201d your previous project before you are able to deploy a new project on Playground.\\n\\n2.  The major news this month was the introduction of our \u201c`debug`\u201d functionality. The motivation for this feature was that while the Defang experience is amazing when everything goes smoothly, we saw users (including our own interns who are helping write all those [samples](https://docs.defang.io/docs/samples)) struggle when they hit an error. The underlying reason for the error could come from a variety of sources: an error in the developer\u2019s application (including in their Dockerfile or Compose file), an issue in the way Defang is processing the application, or an issue in the underlying cloud platform (currently, AWS). To the developer, it is often not obvious what the issue is or how to fix it. That got us thinking how we could make this debugging experience \u201cradically simpler\u201d and thus the idea for `defang debug` was born.\\n    \\n    Now (with CLI v0.5.37 if your application encounters an error that leads to a failed deployment, a failed health-check, or a run-time error, Defang will automatically detect the issue. It will then offer to help you debug it by running the `defang debug`  command. If you choose to proceed, Defang will apply an LLM model to try to determine the precise cause of the error, with the context of your application source, logs, error code etc. And it will try to come up with one or more actionable insights on how to fix the error. For an example, see the case below:\\n    \\n    \\n    \\n    Behind the scenes, Defang is having a conversation on your behalf with the LLM to narrow down to the cause of the error.  We would love for you to try the `debug` feature and give us your feedback so we can improve it further. One future improvement already on our list is the ability to, with user consent, automatically apply a chosen fix and re-try. We are also looking for way to improve the range of failures we are able to diagnose successfully.\\n\\n## Townhall\\n\\nIf you\'re excited about what\'s coming next and want to hear more about our vision for the future, join us for our Townhall on August 21st. We\'ll be sharing more about our roadmap and what we\'re working on next. We\'ll also be making sure to take time to answer any questions you have, hear your feedback, and learn more about what you want from Defang!\\n\\n**[Register here](https://lu.ma/rlj13eq5)**\\n    \\n---\\n\\nWe\u2019re excited to keep improving Defang to make it the easiest way for you to Develop, Deploy, and Debug cloud application. Stay tuned for more updates next month."},{"id":"july-2024-product-update","metadata":{"permalink":"/blog/july-2024-product-update","source":"@site/blog/2024-07-01-july-product-updates.md","title":"June 2024 Product Update","description":"Hey folks! We\'ve got another batch of updates to share with you about what the Defang team has been working on over the past month. We\'re committed to improving your deployment experience, so let\'s take a look at what\'s new.","date":"2024-07-01T00:00:00.000Z","formattedDate":"July 1, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"Windows","permalink":"/blog/tags/windows"},{"label":"Managed Redis","permalink":"/blog/tags/managed-redis"},{"label":"CLI","permalink":"/blog/tags/cli"}],"readingTime":2.46,"hasTruncateMarker":false,"authors":[{"name":"Defang Team"}],"frontMatter":{"slug":"july-2024-product-update","title":"June 2024 Product Update","tags":["Cloud","NoDevOps","BYOC","Windows","Managed Redis","CLI"],"author":"Defang Team"},"unlisted":false,"prevItem":{"title":"July 2024 Product Update","permalink":"/blog/2024-07-31-product-update"},"nextItem":{"title":"May 2024 Product Update","permalink":"/blog/june-2024-product-update"}},"content":"Hey folks! We\'ve got another batch of updates to share with you about what the Defang team has been working on over the past month. We\'re committed to improving your deployment experience, so let\'s take a look at what\'s new.\\n\\n## Windows Experience Improvements\\n\\nFor our Windows users out there, we\'ve made some changes to make your Defang experience even smoother:\\n\\n* You can now install Defang using `winget`, the Windows Package Manager, for a streamlined setup\\n* We\'ve introduced a signed binary for added security and peace of mind\\n\\nDeploying your apps from Windows just got a little bit nicer.\\n\\n## One-click Deploy\\n\\nWe\'ve added a new feature that will make it even easier to get started with Defang. We\'ve created a flow where each sample provides a button that allows you to immediately deploy a template with a GitHub action which will automatically deploy the sample to the Defang Playground. That means you can easily make changes by committing them to your brand new repo, and everything automatically updates in the Playground. It\'s a great way to get started with Defang and start experimenting with your own projects.\\n\\nTry it now [from our portal](https://portal.defang.dev/sample)!\\n\\n![screenshot of 1-click deploy UI in portal](/img/july-update/1-click-deploy.png)\\n\\n## Managed Redis Updates\\n\\nWe first introduced this last month, but we\'ve since rolled it out to everyone. We also added a sample that showcases the power of managed Redis: [BullMQ with Redis](https://github.com/DefangSamples/sample-bullmq-bullboard-redis-template). It demonstrates how you can use BullMQ and BullBoard with a managed Redis instance to create a powerful job queue system so you can easily build robust, scalable applications in AWS with Defang.\\n\\n## Updated Samples\\n\\nWe\'ve updated our sample projects to showcase how to use them with Defang, including:\\n\\n* [ASP.NET Core](https://github.com/DefangSamples/sample-csharp-dotnet-template)\\n* [Feathers.js](https://github.com/DefangSamples/sample-feathersjs-template)\\n* [Flask & LangChain](https://github.com/DefangSamples/sample-langchain-template)\\n* [BullMQ with Redis](https://github.com/DefangSamples/sample-bullmq-bullboard-redis-template)\\n\\nCheck them out if you\'re looking for some inspiration or a starting point for your own projects.\\n\\n## CLI Updates\\n\\nWe\'re always looking for ways to enhance the CLI experience. Here\'s what\'s new:\\n\\n* `npx defang` automatically checks to always have the latest version of the CLI\\n* The output during `defang compose up` has been streamlined to focus on the most important information\\n* `defang tail` now supports listening to specific services, making it easier to troubleshoot issues\\n* We\'ve improved hints and error messages to better guide you when something goes wrong\\n* The CLI now has improved color support for light theme terminals, making it easier on the eyes\\n\\nIt\'s the small refinements that can make a big difference in your workflow.\\n\\n## Other Updates\\n\\nHere are a few more things that didn\'t quite fit with the rest:\\n\\n* Visibility into ECS deployment events in BYOC tail logs\\n* Improvements to ACME certificate generation\\n\\nKeep an eye out for these updates in the near future.\\n\\n---\\n\\nAs always, we\'d love your help shaping the future of Defang, so let us know what you\'d like to see next. Happy deploying! \ud83d\ude80"},{"id":"june-2024-product-update","metadata":{"permalink":"/blog/june-2024-product-update","source":"@site/blog/2024-06-01-june-product-updates.md","title":"May 2024 Product Update","description":"Hey folks! We\u2019re back with another exciting update about Defang. Our team has been working hard to bring you new features and improvements so you can get deploying faster. Here\u2019s a rundown of what we\u2019ve been up to this month:","date":"2024-06-01T00:00:00.000Z","formattedDate":"June 1, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"Playground","permalink":"/blog/tags/playground"},{"label":"Load Testing","permalink":"/blog/tags/load-testing"},{"label":"ACME","permalink":"/blog/tags/acme"},{"label":"Managed Redis","permalink":"/blog/tags/managed-redis"},{"label":"Kaniko","permalink":"/blog/tags/kaniko"},{"label":"Postgres","permalink":"/blog/tags/postgres"},{"label":"ECS","permalink":"/blog/tags/ecs"}],"readingTime":3.175,"hasTruncateMarker":false,"authors":[{"name":"Defang Team"}],"frontMatter":{"slug":"june-2024-product-update","title":"May 2024 Product Update","tags":["Cloud","NoDevOps","BYOC","Playground","Load Testing","ACME","Managed Redis","Kaniko","Postgres","ECS"],"author":"Defang Team"},"unlisted":false,"prevItem":{"title":"June 2024 Product Update","permalink":"/blog/july-2024-product-update"},"nextItem":{"title":"April 2024 Product Update","permalink":"/blog/may-2024-product-update"}},"content":"Hey folks! We\u2019re back with another exciting update about Defang. Our team has been working hard to bring you new features and improvements so you can get deploying faster. Here\u2019s a rundown of what we\u2019ve been up to this month:\\n\\n\\n## Samples, samples, samples!\\n\\nWe\'ve been cranking out samples like there\'s no tomorrow. We\'ve published samples to get you up and running with FastAPI, Elysia, Angular, React, Svelte, Sveltekit, Sails.js, Phoenix, and more. You can filter through them on the [Defang homepage](https://defang.io/#deploy). Check out our video about all the [new samples and functionality](https://www.youtube.com/watch?v=8wIU_af-sX8).\\n\\n### Start from a sample in seconds\\n\\nWith all this work we\'ve been putting into samples, we realized it would be pretty awesome if you could clone a sample faster. So we updated the CLI. Now, if you run `defang generate` you\'ll be able to filter through the samples and choose one. You can also filter through the samples on the [Defang homepage](https://defang.io/#deploy) and clone any of them with a simple command like `defang new sveltekit`.\\n\\n### Sample templates\\n\\nIf you look through our [GitHub organization](https://github.com/DefangLabs), you\'ll start seeing loads of repos with the structure `sample-<sample_name>-template`. If you open them, you can create a new repo by clicking this button:\\n\\n![screenshot of github UI pointing towards template button](https://github.com/DefangLabs/defang-docs/assets/910895/97d33d90-43b9-499a-b139-e114b701adcb)\\n\\n\\nNot only will that create a new repo based on the sample in your account, but if you\'ve used Defang before (and accepted the Terms and Conditions) it will automatically deploy it to the playground so you can start playing with Defang immediately.\\n\\n## ACME for BYOD\\n\\nWe\u2019re excited to announce that ACME support is now available for Bring Your Own Domain (BYOD) in both Bring Your Own Cloud (BYOC) and Playground. This means you can easily add Let\'s Encrypt certificates to your custom domains, regardless of where your DNS is hosted. Defang will handle the certificate generation and automatic renewal for you. Nice and easy.\\n\\n## Warnings for Stateful Services\\n\\nTo help you avoid potential pitfalls, we\u2019ve added warnings against deploying stateful services with Defang, since you shouldn\'t actually be deploying anything stateful with Defang. For example, we\'ll warn you if you try to deploy services with images like `postgres:<version>`, `redis:<version>`, `minio:<version>`, etc. \\n\\nIn the near future we will be offering ways to run some stateful services using cloud providers\' managed offerings. For example Redis, Postgres, and S3. Speaking of which...\\n\\n## Managed Redis!\\n\\nRedis is such a versatile tool that can help with so many different use cases. So we\'ve introduced Managed Redis! You can now specify the Redis image in your `compose.yaml` file and indicate that you want it managed by your cloud provider using `x-defang-redis: true` in your service definition. \\n\\n## Load Testing\\n\\nTo make sure Defang is ready for loads of new users, we\'ve been doing a lot of load testing. This is going to help us identify and address potential bottlenecks so we can make sure that Defang scales efficiently and handles all you new users smoothly.\\n\\n## Upgraded Kaniko\\n\\nWe\u2019ve upgraded our Kaniko integration to version 1.23.0 to improve your container build experience. The new version comes with several bug fixes that enhance stability and performance. This means faster and more reliable builds for your applications.\\n\\n## Upcoming Features\\n\\nWe\u2019re not stopping here! Here\u2019s a sneak peek at what\u2019s coming soon:\\n\\n### Managed Postgres\\n\\nBuilding on the momentum of Managed Redis, we\u2019re introducing Managed Postgres. Soon you\u2019ll be able to easily integrate a managed Postgres database into your deployment!\\n\\n### BYOC ECS Lifecycle Events\\n\\nDefang runs your services with ECS, and we\'re working on making it clearer what\'s happening under the hood. \\n\\n---\\n\\nStay tuned for more updates and improvements. As always, we appreciate your feedback and are committed to making Defang the easiest way to deploy your applications to the cloud. Go deploy something awesome! \ud83d\ude80"},{"id":"may-2024-product-update","metadata":{"permalink":"/blog/may-2024-product-update","source":"@site/blog/2024-05-01-may-product-updates.md","title":"April 2024 Product Update","description":"Hey folks! There is a lot going on at Defang and we\'re excited to share our latest product updates with you. Over the last month, we\'ve been working hard to improve the Defang system and make it even easier for you to deploy your applications. Here\'s a quick overview of what we\'ve been up to:","date":"2024-05-01T00:00:00.000Z","formattedDate":"May 1, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"AWS ECS","permalink":"/blog/tags/aws-ecs"},{"label":"defang compose up","permalink":"/blog/tags/defang-compose-up"}],"readingTime":1.805,"hasTruncateMarker":false,"authors":[{"name":"Defang Team"}],"frontMatter":{"slug":"may-2024-product-update","title":"April 2024 Product Update","tags":["Cloud","NoDevOps","BYOC","AWS ECS","defang compose up"],"author":"Defang Team"},"unlisted":false,"prevItem":{"title":"May 2024 Product Update","permalink":"/blog/june-2024-product-update"},"nextItem":{"title":"Deploy a Go-powered slackbot with Defang","permalink":"/blog/slackbot-sample"}},"content":"Hey folks! There is a lot going on at Defang and we\'re excited to share our latest product updates with you. Over the last month, we\'ve been working hard to improve the Defang system and make it even easier for you to deploy your applications. Here\'s a quick overview of what we\'ve been up to:\\n\\n## npx defang\\n\\nWe know a lot of you are using Defang for the first time. To make it easier to get started, we\'ve added a new way to install the Defang CLI. Now you can use npx to run the CLI without installing it globally. Just run:\\n\\n```bash\\nnpx defang@latest\\n```\\n\\nThis will download the latest version of the Defang CLI and run it for you. No need to worry about installing or updating the CLI manually!\\n\\n## (coming soon) Bring Your Own Domain with Let\'s Encrypt\\n\\nPreviously you could bring your own domain with <a href=\\"/docs/concepts/defang-byoc\\">Defang BYOC</a>... but you had to host the DNS records with AWS Route 53 in the AWS account you were deploying to. Now you can point domains hosted anywhere to your Defang deployment and we\'ll take care of the rest. We\'ll help generate a Let\'s Encrypt certificate for your domain and automatically renew it for you.\\n\\n## Windows Support\\n\\nSome of you use Defang from a Windows PC and previously a few features didn\'t work correctly on Windows. Some stuff we\'ve fixed:\\n* ansi color codes in logs\\n* handle ctrl-c when tailing logs\\n\\n## Improved CLI\\n\\nWe\'ve made a variety of small tweaks and improvements to the CLI which should make things a little bit cleaner and more stable.\\n* log messages have been made more clear\\n* adding more progress information during compose up\\n\\n## Stability and Reliability\\n\\nDefang is still in Beta and we know we\'ve got to be rock solid by the time we release V1, so we\'ve been working hard to improve the stability and reliability of the Defang architecture. We\'ve been battle-testing different technologies to see how they hold up and have mad a few changes that should make things even better:\\n* capacity improvements in build queues\\n* improvements in log availability"},{"id":"slackbot-sample","metadata":{"permalink":"/blog/slackbot-sample","source":"@site/blog/2024-03-28-slackbot-sample.md","title":"Deploy a Go-powered slackbot with Defang","description":"Hey folks! Today, I\'m going to share one of our code samples that will show you how to deploy a simple Slack bot. If you\'re looking to connect a cloud service to Slack to publish status updates, or something else like that, this should help you get started. We\'ll walk through a step-by-step process of writing a Go program using the github.com/slack-go/slack library to interact with the Slack API and easily deploy it using Defang.","date":"2024-03-28T00:00:00.000Z","formattedDate":"March 28, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"AWS ECS","permalink":"/blog/tags/aws-ecs"},{"label":"defang compose up","permalink":"/blog/tags/defang-compose-up"},{"label":"Slack API","permalink":"/blog/tags/slack-api"}],"readingTime":2.595,"hasTruncateMarker":false,"authors":[{"name":"Rapha\xebl Titsworth-Morin"}],"frontMatter":{"slug":"slackbot-sample","title":"Deploy a Go-powered slackbot with Defang","tags":["Cloud","NoDevOps","BYOC","AWS ECS","defang compose up","Slack API"],"author":"Rapha\xebl Titsworth-Morin"},"unlisted":false,"prevItem":{"title":"April 2024 Product Update","permalink":"/blog/may-2024-product-update"},"nextItem":{"title":"Add Defang to your developer environments instantly","permalink":"/blog/dev-environments"}},"content":"Hey folks! Today, I\'m going to share one of our code samples that will show you how to deploy a simple Slack bot. If you\'re looking to connect a cloud service to Slack to publish status updates, or something else like that, this should help you get started. We\'ll walk through a step-by-step process of writing a Go program using the [github.com/slack-go/slack](https://github.com/slack-go/slack) library to interact with the Slack API and easily deploy it using Defang.\\n\\n## Prerequisites\\n\\nBefore we dive into the details, let\'s make sure you have everything you need to get started:\\n\\n1.  **Install Defang CLI:** Simplify your deployment process by installing the Defang CLI tool. Follow the instructions [here](https://docs.defang.io/docs/getting-started/installing) to get it up and running quickly.\\n\\n2.  **Slack API Token:** Create a Slack App at https://api.slack.com/apps, granting it the necessary permissions, including the\xa0bot `chat:write`\xa0scope.\\n![screenshot of the slack admin UI showing the bot scopes](/img/slackbot-sample/scopes.png)\\n\\n3. **Install the app in your workspace:** You\'ll need to install the app in your workspace for it to work. Click the \\"Install to Workspace\\" button in the Slack admin UI to do this. Mine says \\"Reinstall\\" because I\'ve already installed it.\\n![screenshot of the slack admin UI showing the install button](/img/slackbot-sample/install-app.png)\\n\\n4. **Copy the Bot User OAuth Access Token:** This token will authenticate your Slackbot with the Slack API.\\n![screenshot of the slack admin UI showing the auth token field](/img/slackbot-sample/token.png)\\n\\n5. **Invite the Bot to a Channel:** To enable your Slackbot, invite it to the desired channel using the\xa0`@<botname>`\xa0command. In the screenshot below, my bot\'s name actually starts with the word invite, but if your bot is called `mycoolbot` you would invite it with `@mycoolbot`. This ensures your Slackbot has the required permissions to interact with the channel.\\n![screenshot of the slack chat UI showing me inviting my bot](/img/slackbot-sample/invite.png)\\n\\n6. **Clone the Sample Code:** Clone the Defang repository and navigate to the\xa0`samples/golang/slackbot`\xa0directory. This directory contains the sample code for the Slackbot.\\n\\n```bash\\ngit clone https://github.com/DefangLabs/defang\\ncd defang/samples/golang/slackbot\\n```\\n\\n## Deployment Steps\\n\\nNow that we have everything set up, let\'s dive into the deployment process. Follow these steps to deploy your Slackbot effortlessly:\\n\\n1.  **Set Up Secrets:** Prioritize security by configuring environment variables as sensitive config. Use the Defang CLI\'s\xa0`defang config set`\xa0command to set the\xa0`SLACK_TOKEN`\xa0and `SLACK_CHANNEL_ID`\xa0configs.\\n    Replace\xa0`your_slack_token`\xa0and\xa0`your_slack_channel_id`\xa0with the respective values:\\n\\n    ```bash\\n    defang config set --name SLACK_TOKEN --value your_slack_token\\n    defang config set --name SLACK_CHANNEL_ID --value your_slack_channel_id\\n    ```\\n\\n2.  **Deploy the Slackbot:**  Use the Defang CLI\'s\xa0`defang compose up`\xa0command to deploy.\\n\\n## Usage\\nWith your Slackbot up and running, let\'s explore how to make the most of it. Simply send a POST request to the\xa0`/`\xa0endpoint with a JSON body containing the message you want to post to the Slack channel. Popular tools like cURL or Postman can help you send the request:\\n\\n```bash\\ncurl \'https://raphaeltm-bot--8080.prod1.defang.dev/\' \\\\\\n  -H \'content-type: application/json\' \\\\\\n  --data-raw $\'{\\"message\\":\\"This is your bot speaking. We\\\\\'ll be landing in 10 minutes. Please fasten your seatbelts.\\"}\'\\n```\\n\\n## Takeaways\\nCongratulations! You\'ve successfully deployed a Slackbot using Defang. If you deployed this as an internal service, you could use it to send status updates, alerts, or other important messages to your team. The possibilities are endless!"},{"id":"dev-environments","metadata":{"permalink":"/blog/dev-environments","source":"@site/blog/2024-03-20-dev-environments.mdx","title":"Add Defang to your developer environments instantly","description":"Defang is aiming to reduce the barriers to entry to cloud application development. With our tooling, we make it really easy to deploy multi-service containerized applications to your own cloud with a single command.","date":"2024-03-20T00:00:00.000Z","formattedDate":"March 20, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"AWS ECS","permalink":"/blog/tags/aws-ecs"},{"label":"defang compose up","permalink":"/blog/tags/defang-compose-up"},{"label":"developer environments","permalink":"/blog/tags/developer-environments"},{"label":"Cloud IDEs","permalink":"/blog/tags/cloud-id-es"},{"label":"CDE","permalink":"/blog/tags/cde"}],"readingTime":1.065,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"dev-environments","title":"Add Defang to your developer environments instantly","tags":["Cloud","NoDevOps","BYOC","AWS ECS","defang compose up","developer environments","Cloud IDEs","CDE"]},"unlisted":false,"prevItem":{"title":"Deploy a Go-powered slackbot with Defang","permalink":"/blog/slackbot-sample"},"nextItem":{"title":"About my Journey Deploying my First Web Application","permalink":"/blog/about-my-journey-deploying-my-first-web-application"}},"content":"Defang is aiming to reduce the barriers to entry to cloud application development. With our tooling, we make it really easy to deploy multi-service containerized applications [to your own cloud](https://docs.defang.io/docs/concepts/defang-byoc) with a single command.\\n\\nWe want it to be easy for you to try Defang with as little friction as possible, though, so we have done the work so you can easily get started in a GitHub Codespaces environment, a GitPod Workspace, or even a local Dev Container.\\n\\n<iframe style={{\\n    width: \'100%\',\\n    aspectRatio: \'560/315\',\\n}} src=\\"https://www.youtube.com/embed/71pmCfLdxTg?si=7hRL-4uyTDANLe78\\" title=\\"YouTube video player\\" frameborder=\\"0\\" allow=\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\" referrerpolicy=\\"strict-origin-when-cross-origin\\" allowfullscreen></iframe>\\n\\n## Codespaces\\n\\nIf you want to get started with Codespaces, you can just fork [this repo](https://github.com/DefangLabs/github-codespace). It comes with the Defang CLI pre-installed so you can start playing with it immediately. It\'s setup using the Defang CLI [Dev Container Feature](https://github.com/DefangLabs/devcontainer-feature/pkgs/container/devcontainer-feature%2Fdefang-cli).\\n\\n## Dev Containers\\n\\n[Dev Containers](https://code.visualstudio.com/docs/devcontainers/containers) are a cool way to provision and configure development environments and share that configuration with other people you are working with. It\'s a spec that is supported by [VS Code](https://code.visualstudio.com/docs/devcontainers/containers), [Visual Studio](https://devblogs.microsoft.com/cppblog/dev-containers-for-c-in-visual-studio/), the JetBrains IDEs like [IntelliJ](https://www.jetbrains.com/help/idea/connect-to-devcontainer.html) and [PyCharm](https://www.jetbrains.com/help/pycharm/connect-to-devcontainer.html), [DevPod](https://devpod.sh/docs/developing-in-workspaces/devcontainer-json) and others.\\n\\n## GitPod\\n\\nGitPod is another Cloud IDE, a bit like GitHub Codespaces. If prefer GitPod, you can try Defang in a GitPod environment by using [this repo](https://github.com/DefangLabs/gitpod-workspace/tree/main)."},{"id":"about-my-journey-deploying-my-first-web-application","metadata":{"permalink":"/blog/about-my-journey-deploying-my-first-web-application","source":"@site/blog/2024-03-04-about-my-journey-deploying-my-first-web-application.mdx","title":"About my Journey Deploying my First Web Application","description":"About the author: Aaron Yu is currently an intern at Defang Software Labs with a keen interest in the area of web development. He wrote this blog post after trying to deploy an application by himself directly on AWS first, and then using Defang.","date":"2024-03-04T00:00:00.000Z","formattedDate":"March 4, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"AWS ECS","permalink":"/blog/tags/aws-ecs"},{"label":"defang compose up","permalink":"/blog/tags/defang-compose-up"}],"readingTime":3.17,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"about-my-journey-deploying-my-first-web-application","title":"About my Journey Deploying my First Web Application","tags":["Cloud","NoDevOps","BYOC","AWS ECS","defang compose up"]},"unlisted":false,"prevItem":{"title":"Add Defang to your developer environments instantly","permalink":"/blog/dev-environments"},"nextItem":{"title":"Announcing the Defang Public Beta","permalink":"/blog/announcing-defang-public-beta"}},"content":"<div align=\\"center\\">\\n    <em>About the author: Aaron Yu is currently an intern at Defang Software Labs with a keen interest in the area of web development. He wrote this blog post after trying to deploy an application by himself directly on AWS first, and then using Defang.</em>\\n</div>\\n<br/>\\n\\nAs a student at University of British Columbia, new to the area of web development, I needed to develop and deploy a web application as a course project. It was already a huge challenge to complete the coding part. I could not believe that an even bigger challenge awaited. Picking the right platform and services is tough to start with. Do you know that AWS offers 200 different services? Lucky for me my professors\u2019 instructed us to use ECS. Otherwise, I would have been totally lost.\\n\\nStarting my project, honestly, it felt like I was hitting a brick wall. Diving into AWS with little to no clue was tough. Terms like \\"ECS clusters,\\" \\"task definitions,\\" and \\"IAM roles\\" were flying over my head. I was scared of messing something up, especially when it came to setting up things like ECR and load balancers.\\n\\nIt was overwhelming when all these unfamiliar concepts came at me at once. I searched them up on the internet and went straight to a top-rated YouTube tutorial. I spent an hour and a half going through the whole video series. Those tutorials, as helpful as they were, couldn\'t fully prepare me for the hands-on challenges of real-life implementation. It\'s one thing to follow along with a guide when everything goes right; it\'s another to adapt when things don\'t quite match up to the tutorial\u2019s scenarios.\\n\\n\\n<div align=\\"center\\">\\n    <img src=\\"/img/how-AWS-looks.png\\" alt=\\"Example banner\\" width=\\"550px\\"/>\\n</div>\\n\\n<div align=\\"center\\">\\n   <em>It could be confusing if you are new to this area</em>\\n</div>\\n<br/>\\n\\nI ran into so many problems with configuring services. Sometimes it is caused by carelessly selecting the wrong options; sometimes it is due to the fact that I have no idea what the buttons mean; sometimes it is just a bug with my code. Those errors triple the time it took to deploy my project. It was indeed extremely frustrating.\\n\\n<div align=\\"center\\">\\n    <img src=\\"/img/error-AWS.png\\" alt=\\"error-AWS\\" width=\\"550px\\"/>\\n</div>\\n\\n<div align=\\"center\\">\\n    <em>I have this scary screen when trying to delete the service I created; this is merely one of the many errors I faced</em>\\n</div>\\n<br/>\\n\\nThen I found Defang (www.defang.io), and it was like someone flipped a switch. Suddenly, all that complicated stuff became way easier. All I needed to do is to install Defang, build a compose.yaml file to describe my application, and run a single command - defang compose up. And Defang even has a Gen-AI assistant to help you write the code and compose file for your application. Defang automatically does all the heavy-lifting behind the scenes - configuring all the necessary services in a secure and optimal way, and automatically building and deploying my application components. No more late nights trying to figure out AWS docs or stressing about getting everything right. Deploying my Django Restaurant Homepage went from being my biggest worry to one of the smoothest parts of my project.\\n\\n\\n<div align=\\"center\\">\\n    <img src=\\"/img/defang-compose-up.png\\" alt=\\"defang-compose-up\\" width=\\"550px\\"/>\\n</div>\\n\\n<div align=\\"center\\">\\n    <em>with just a single command in the CLI</em>\\n</div>\\n<br/>\\n\\nWith Defang, I could chill a bit and actually enjoy working on my project, focusing on the cool parts without getting bogged down by all the technical stuff. It made cloud deployment feel doable and fun, even for someone like me who was pretty much a beginner. Give it a try yourself - go to www.defang.io to get started.\\n\\n\\n<div align=\\"center\\">\\n    <img src=\\"/img/sample-result.png\\" alt=\\"sample-result\\" width=\\"550px\\"/>\\n</div>\\n\\n<div align=\\"center\\">\\n   <em>It is deployed to the internet! (arorschach is my username)</em>\\n</div>\\n<br/>\\n\\nTry it yourself!\\n\\nSample Code: [Restaurant Homepage](https://github.com/HongchenY/Sample-Restaurant-Homepage)\\n\\nDefang Docs: [Docs](https://docs.defang.io/docs/intro)"},{"id":"announcing-defang-public-beta","metadata":{"permalink":"/blog/announcing-defang-public-beta","source":"@site/blog/2024-02-12-announcing-defang-public-beta.md","title":"Announcing the Defang Public Beta","description":"Announcing the Defang Public Beta","date":"2024-02-12T00:00:00.000Z","formattedDate":"February 12, 2024","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"GenerativeAI","permalink":"/blog/tags/generative-ai"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"},{"label":"BYOC","permalink":"/blog/tags/byoc"},{"label":"AWS","permalink":"/blog/tags/aws"}],"readingTime":1.61,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"announcing-defang-public-beta","title":"Announcing the Defang Public Beta","tags":["Cloud","GenerativeAI","NoDevOps","BYOC","AWS"]},"unlisted":false,"prevItem":{"title":"About my Journey Deploying my First Web Application","permalink":"/blog/about-my-journey-deploying-my-first-web-application"},"nextItem":{"title":"Announcing the Private Beta for the Defang Opinionated Platform","permalink":"/blog/announcement"}},"content":"**Announcing the Defang Public Beta**\\n\\n**A radically simpler way for developers to create, deploy, and manage cloud applications.**\\n\\nEver since we shipped our Private Beta in the summer of 2023, we have been working with early adopters and listening to their feedback. While these early customers loved the ease with which they could create, deploy, and manage a cloud application, they had one big request - to deploy their applications to their own cloud (e.g. AWS) account. This was important to them for a number of reasons - to leverage their cloud credits, to enforce their IAM roles and security settings, to integrate new application components with their existing deployments, and more.\\n\\nAnd so, today with our Public Beta, we are addressing this request. With today\u2019s release of [Defang BYOC](https://docs.defang.io/docs/concepts/defang-byoc) (Bring-your-own-Cloud), you can now enjoy all the benefits of Defang **and** deploy applications to your own AWS account! Our Private Beta experience is still available as [Defang Playground](https://docs.defang.io/docs/concepts/defang-playground) for you to quickly and easily prototype applications and deploy them to our hosted environment.\\n\\nYou can learn more about Defang [here](https://docs.defang.io/docs/intro). Also check out our [tutorials](https://docs.defang.io/docs/category/tutorials), [samples](https://docs.defang.io/docs/samples), and [FAQ](https://docs.defang.io/docs/faq) to know more.\\n\\n**Try the Public Beta!**\\n\\nTo try the Public Beta, please go to [defang.io](http://defang.io) and click on [Download](https://github.com/DefangLabs/defang/releases/latest) to download the CLI and [get started](https://docs.defang.io/docs/getting-started). We would love to have you kick the tires and give us your feedback! Once you sign up you\u2019ll receive an invitation to our Slack support channel in email. You are also welcome to file [Github issues here](https://github.com/DefangLabs/defang/issues).\\n\\n**Stay Tuned for More**\\n\\nWhile the Public Beta is an important step forward, we have already heard requests for additional features - from support for additional cloud platforms such as Azure and GCP, to the ability to easily write cloud-agnostic applications while leveraging the best of each cloud platform. We are already working on these items and shall have more to share in the coming months - stay tuned!"},{"id":"announcement","metadata":{"permalink":"/blog/announcement","source":"@site/blog/2023-06-29-Announcing-the-Private-Beta-for-the-DOP.md","title":"Announcing the Private Beta for the Defang Opinionated Platform","description":"Announcing the Private Beta for the Defang Opinionated Platform: Radically Simplifying and Cloud Application Development, Deployment, and Optimization","date":"2023-06-29T00:00:00.000Z","formattedDate":"June 29, 2023","tags":[{"label":"Cloud","permalink":"/blog/tags/cloud"},{"label":"GenerativeAI","permalink":"/blog/tags/generative-ai"},{"label":"NoDevOps","permalink":"/blog/tags/no-dev-ops"}],"readingTime":2.055,"hasTruncateMarker":false,"authors":[],"frontMatter":{"slug":"announcement","title":"Announcing the Private Beta for the Defang Opinionated Platform","tags":["Cloud","GenerativeAI","NoDevOps"]},"unlisted":false,"prevItem":{"title":"Announcing the Defang Public Beta","permalink":"/blog/announcing-defang-public-beta"}},"content":"**Announcing the Private Beta for the Defang Opinionated Platform: Radically Simplifying and Cloud Application Development, Deployment, and Optimization**\\n\\nWe\'re thrilled to announce the release of our Private Beta for the Defang Opinionated Platform (DOP). We started Defang because, as practitioners with experience in both building cloud apps and building cloud platforms, we were unhappy with the state of the art. It was, and remains, too difficult to develop, deploy, and optimize cloud applications. In architecting and building a cloud app, developers need to consider a variety of factors such as performance, scalability, cost, security, flexibility, simplicity, etc. At the same time, they face a bewildering array of choices - from app architecture to choice of cloud platforms and services, to configuration and deployment, CI-CD, security setting, etc. - in topics that they are not experts in. Clearly, we need a better way.\\n\\nWe realize that improving on this state of affairs is a long journey. Today, we are taking an initial step with the release of the Private Beta of the DOP. The DOP enables **AI-assisted development**, with the ability to specify a high-level prompt and get back an initial version of your cloud service code, which can then be refined further. The DOP **simplifies CI-CD** by automatically building and deploying new artifacts to your target environments when you push new code to your source repository, taking care of all dependency management and build tasks. And the **DOP pre-provisions properly secured and configured staging and production environments** for your application, optimized for security, scaling, and cost.\\n\\n**Try the Private Beta!**\\n\\nTo try the Private Beta, please go to [portal.defang.dev](https://portal.defang.dev) and register. We would love to have you kick the tires and give us your feedback! You can also check out our [documentation](https://docs.defang.io/docs/intro), [samples](https://docs.defang.io/docs/intro), and our [Github repository](https://github.com/DefangLabs).\\n\\n**Stay Tuned for More**\\n\\nWhile the Private Beta is a start, we have already heard requests for additional features from some of our early adopters and have a lot more in the pipeline! Top of the list is the ability to bring your own cloud accounts (AWS, Azure, GCP). Another frequent request is the ability to access a variety of compute and storage services native to the underlying platform while still maintaining app portability. And we also hear about the need to be able to monitor and optimize an app once deployed. We are already working on all these items and hope to have more to share in the coming months - stay tuned!"}]}')}}]);