"use strict";(self.webpackChunkdefang_docs=self.webpackChunkdefang_docs||[]).push([[7597],{28453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>l});var o=n(96540);const i={},r=o.createContext(i);function c(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:s},e.children)}},74062:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>t});var o=n(74848),i=n(28453);const r={title:"Compose",description:"Defang allows you to use the compose.yaml specification to deploy your application to the cloud.",sidebar_position:150},c="Compose",l={id:"concepts/compose",title:"Compose",description:"Defang allows you to use the compose.yaml specification to deploy your application to the cloud.",source:"@site/docs/concepts/compose.md",sourceDirName:"concepts",slug:"/concepts/compose",permalink:"/docs/concepts/compose",draft:!1,unlisted:!1,editUrl:"https://github.com/DefangLabs/defang-docs/tree/main/docs/concepts/compose.md",tags:[],version:"current",sidebarPosition:150,frontMatter:{title:"Compose",description:"Defang allows you to use the compose.yaml specification to deploy your application to the cloud.",sidebar_position:150},sidebar:"docsSidebar",previous:{title:"Generate",permalink:"/docs/concepts/generate"},next:{title:"Pulumi",permalink:"/docs/concepts/pulumi"}},d={},t=[{value:"How It Works",id:"how-it-works",level:2},{value:"Example of a Compose File",id:"example-of-a-compose-file",level:2},{value:"Compose Top-level Properties",id:"compose-top-level-properties",level:2},{value:"<code>services</code>",id:"services",level:3},{value:"<code>networks</code>",id:"networks",level:3},{value:"<code>volumes</code>",id:"volumes",level:3},{value:"Compose Service-level Properties",id:"compose-service-level-properties",level:2},{value:"<code>build</code>",id:"build",level:3},{value:"<code>image</code>",id:"image",level:3},{value:"<code>ports</code>",id:"ports",level:3},{value:"<code>command</code>",id:"command",level:3},{value:"<code>deploy</code>",id:"deploy",level:3},{value:"<code>depends_on</code>",id:"depends_on",level:3},{value:"<code>environment</code>",id:"environment",level:3},{value:"<code>healthcheck</code>",id:"healthcheck",level:3},{value:"<code>networks</code>",id:"networks-1",level:3},{value:"<code>restart</code>",id:"restart",level:3},{value:"<code>volumes</code>",id:"volumes-1",level:3}];function a(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"compose",children:"Compose"}),"\n",(0,o.jsxs)(s.p,{children:["Defang allows you to use ",(0,o.jsx)(s.code,{children:"compose.yaml"})," files to deploy your application to the cloud.\nThe ",(0,o.jsx)(s.code,{children:"compose.yaml"})," file is a simple way to define and run multi-container applications.\nThis file format may look familiar to you if you've used ",(0,o.jsx)(s.a,{href:"https://docker.com",children:"Docker"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/spec.md#compose-file",children:"Compose Specification"})," lets you define a platform-agnostic application designed as a set of containers which are configured to run together with shared resources. These applications may be destined for any ",(0,o.jsx)(s.a,{href:"https://opencontainers.org/",children:"OCI"})," Container Runtime. Defang does the heavy lifting to deploy to your favourite cloud platform using this file."]}),"\n",(0,o.jsx)(s.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,o.jsxs)(s.p,{children:["You can create a ",(0,o.jsx)(s.code,{children:"compose.yaml"})," file in the root of your project, or use the ",(0,o.jsx)(s.a,{href:"/docs/tutorials/generate-new-code-using-ai",children:(0,o.jsx)(s.code,{children:"defang generate"})})," command to create one for you (along with other resources). This file is used to define your application's ",(0,o.jsx)(s.a,{href:"/docs/concepts/services",children:"services"})," and how they run. You can edit this file to add more services or change the configuration of services."]}),"\n",(0,o.jsxs)(s.p,{children:["When you run ",(0,o.jsx)(s.code,{children:"defang compose up"}),", Defang will read your ",(0,o.jsx)(s.code,{children:"compose.yaml"})," file and ",(0,o.jsx)(s.a,{href:"/docs/concepts/deployments",children:"deploy"})," the services named in that file to the cloud."]}),"\n",(0,o.jsx)(s.h2,{id:"example-of-a-compose-file",children:"Example of a Compose File"}),"\n",(0,o.jsxs)(s.p,{children:["Here is a basic ",(0,o.jsx)(s.code,{children:"compose.yaml"})," file that contains all the required properties for deployment in Defang."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"services:\n  service-example:\n    image: nginx:latest # use one of: image (shown on this line) or build (shown below)\n    # build:\n    #   context: .\n    #   dockerfile: Dockerfile\n    ports:\n      - mode: ingress # specify ports to expose\n        target: 8080\n        published: 8080 # this is useful for running locally\n"})}),"\n",(0,o.jsx)(s.h2,{id:"compose-top-level-properties",children:"Compose Top-level Properties"}),"\n",(0,o.jsxs)(s.p,{children:["Here are a list of top-level properties of the ",(0,o.jsx)(s.a,{href:"https://docs.docker.com/compose/compose-file/",children:"Compose specification"})," that Defang supports when writing a ",(0,o.jsx)(s.code,{children:"compose.yaml"})," file."]}),"\n",(0,o.jsx)(s.h3,{id:"services",children:(0,o.jsx)(s.code,{children:"services"})}),"\n",(0,o.jsx)(s.p,{children:"(Required)"}),"\n",(0,o.jsx)(s.p,{children:"The services defined in your application."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"services:\n  service:\n    # add service-level properties here\n"})}),"\n",(0,o.jsx)(s.admonition,{type:"info",children:(0,o.jsxs)(s.p,{children:["Defang identifies a service based on your username, project name, and the service name you've defined under the ",(0,o.jsx)(s.code,{children:"services"})," property. See our ",(0,o.jsx)(s.a,{href:"/docs/concepts/services",children:"Services"})," page for more about how Defang resolves service names."]})}),"\n",(0,o.jsx)(s.h3,{id:"networks",children:(0,o.jsx)(s.code,{children:"networks"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional)"}),"\n",(0,o.jsxs)(s.p,{children:["The networks defined in your application. This is commonly added together with a ",(0,o.jsxs)(s.a,{href:"#networks-1",children:["service-level ",(0,o.jsx)(s.code,{children:"networks"})]})," property."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'networks:\n  default: # the "default" network is always created even if not specified\n'})}),"\n",(0,o.jsxs)(s.p,{children:["See our ",(0,o.jsx)(s.a,{href:"/docs/concepts/networking",children:"Networking"})," page for more."]}),"\n",(0,o.jsx)(s.h3,{id:"volumes",children:(0,o.jsx)(s.code,{children:"volumes"})}),"\n",(0,o.jsx)(s.p,{children:"(Not yet supported)"}),"\n",(0,o.jsx)(s.p,{children:"The volume mounts for a container, reusable across services. This feature is not currently supported by Defang."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"# volumes:\n#   db-data:\n"})}),"\n",(0,o.jsx)(s.admonition,{type:"warning",children:(0,o.jsxs)(s.p,{children:["Defang does not support the ",(0,o.jsx)(s.code,{children:"secrets"})," top-level property. Please read our ",(0,o.jsx)(s.a,{href:"/docs/concepts/configuration",children:"Configuration"})," page for more."]})}),"\n",(0,o.jsx)(s.h2,{id:"compose-service-level-properties",children:"Compose Service-level Properties"}),"\n",(0,o.jsxs)(s.p,{children:["Here are a list of service-level properties of the ",(0,o.jsx)(s.a,{href:"https://docs.docker.com/compose/compose-file/",children:"Compose specification"})," that Defang supports when writing a ",(0,o.jsx)(s.code,{children:"compose.yaml"})," file."]}),"\n",(0,o.jsxs)(s.admonition,{type:"tip",children:[(0,o.jsxs)(s.p,{children:["Service-level means inside your ",(0,o.jsx)(s.code,{children:"service"}),". A service-level property called ",(0,o.jsx)(s.code,{children:"build"})," would look like:"]}),(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"service:\n  build: ...\n"})}),(0,o.jsxs)(s.p,{children:["Note that in your Compose file, you will need a top-level property called ",(0,o.jsx)(s.code,{children:"services"})," to contain all of your services. For example:"]}),(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"services:\n  service:\n    build: ...\n"})})]}),"\n",(0,o.jsx)(s.h3,{id:"build",children:(0,o.jsx)(s.code,{children:"build"})}),"\n",(0,o.jsxs)(s.p,{children:["(Required, unless ",(0,o.jsx)(s.code,{children:"image"})," is defined)"]}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/build.md",children:"build configuration"}),". This property describes how to create an OCI container for this service."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    build:\n      context: .\n      dockerfile: ./Dockerfile\n"})}),"\n",(0,o.jsx)(s.h3,{id:"image",children:(0,o.jsx)(s.code,{children:"image"})}),"\n",(0,o.jsxs)(s.p,{children:["(Required, unless ",(0,o.jsx)(s.code,{children:"build"})," is defined)"]}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/05-services.md#image",children:"This property"})," describes the image from which your container should start."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    image: nginx:latest\n"})}),"\n",(0,o.jsx)(s.h3,{id:"ports",children:(0,o.jsx)(s.code,{children:"ports"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional, but required if you want to access the service from outside the container)"}),"\n",(0,o.jsxs)(s.p,{children:["The ports to expose. The default port mode is ",(0,o.jsx)(s.code,{children:"ingress"}),"."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    ports:\n      - mode: ingress\n        target: 80\n        published: 80\n"})}),"\n",(0,o.jsx)(s.admonition,{type:"info",children:(0,o.jsxs)(s.p,{children:["Defang ignores ",(0,o.jsx)(s.code,{children:"published"})," ports in production. As such, it is common to make ",(0,o.jsx)(s.code,{children:"target"})," and ",(0,o.jsx)(s.code,{children:"published"})," ports the same when using Defang. However, it can be useful to include a ",(0,o.jsx)(s.code,{children:"published"})," port for local development, such as Docker."]})}),"\n",(0,o.jsx)(s.h3,{id:"command",children:(0,o.jsx)(s.code,{children:"command"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional)"}),"\n",(0,o.jsx)(s.p,{children:"The command which will be run to start your service. If left out, the command from the Docker image will be used."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    command: nginx -g 'daemon off;'\n"})}),"\n",(0,o.jsx)(s.h3,{id:"deploy",children:(0,o.jsx)(s.code,{children:"deploy"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional)"}),"\n",(0,o.jsxs)(s.p,{children:["The ",(0,o.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/deploy.md",children:"Deploy Specification"})," describes the runtime constraints and requirements for how your services will be deployed and managed across different environments (e.g. memory reservations, replicas, number of CPUs, etc.)."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    deploy:\n      replicas: 1\n      reservations:\n        cpus: '0.5'\n        memory: 256M\n"})}),"\n",(0,o.jsx)(s.h3,{id:"depends_on",children:(0,o.jsx)(s.code,{children:"depends_on"})}),"\n",(0,o.jsx)(s.p,{children:"(Not yet supported)"}),"\n",(0,o.jsx)(s.p,{children:"This property describes startup dependencies between services. This feature currently has limited supported by Defang, but can be useful in local development with Docker."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    # depends_on:\n    #   - db\n"})}),"\n",(0,o.jsx)(s.h3,{id:"environment",children:(0,o.jsx)(s.code,{children:"environment"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional)"}),"\n",(0,o.jsx)(s.p,{children:"The environment variables to set."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    environment:\n      DATABASE_USER: someuser\n"})}),"\n",(0,o.jsxs)(s.admonition,{type:"info",children:[(0,o.jsxs)(s.p,{children:["For sensitive environment variables (or secret values), you should list the variable's name with a blank or ",(0,o.jsx)(s.code,{children:"null"})," value, and then securely set their actual value with ",(0,o.jsx)(s.code,{children:"defang config"})," in the CLI. See our ",(0,o.jsx)(s.a,{href:"/docs/concepts/configuration",children:"Configuration page"})," for more."]}),(0,o.jsx)(s.p,{children:"For example:"}),(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"  - DATABASE_USER=someuser # env var loaded with this literal value\n  - DATABASE_PASSWORD # env var loaded using defang config\n"})})]}),"\n",(0,o.jsx)(s.h3,{id:"healthcheck",children:(0,o.jsx)(s.code,{children:"healthcheck"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional, but required for healthchecks on services with a published port)"}),"\n",(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.a,{href:"https://github.com/compose-spec/compose-spec/blob/main/05-services.md#healthcheck",children:"This property"}),' describes a check that will be run to determine whether or not a service\'s containers are "healthy". It works in the same way, and has the same default values, as the ',(0,o.jsx)(s.a,{href:"https://docs.docker.com/engine/reference/builder/#healthcheck",children:"HEALTHCHECK Dockerfile instruction"})," set by the service's Docker image. Your Compose file can override the values set in the Dockerfile."]}),"\n",(0,o.jsxs)(s.p,{children:["When using Defang, your Compose file must have a healthcheck if you want to expose an ",(0,o.jsx)(s.code,{children:"ingress"})," port\u2014even if your Dockerfile already contains one."]}),"\n",(0,o.jsx)(s.admonition,{type:"note",children:(0,o.jsxs)(s.p,{children:[(0,o.jsx)(s.code,{children:"curl"})," is commonly used for containers with an Ubuntu-based image, and ",(0,o.jsx)(s.code,{children:"wget"})," is used for containers with an ",(0,o.jsx)(s.code,{children:"alpine"}),"-based image."]})}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'    healthcheck:\n      test: ["CMD", "curl", "-f", "http://localhost:8080/"]\n      interval: 30s\n      timeout: 90s\n      retries: 3\n'})}),"\n",(0,o.jsx)(s.p,{children:"or"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'    healthcheck:\n      test: ["CMD", "wget", "--spider", "http://localhost:8080/"]\n      interval: 30s\n      timeout: 90s\n      retries: 3\n'})}),"\n",(0,o.jsx)(s.h3,{id:"networks-1",children:(0,o.jsx)(s.code,{children:"networks"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional)"}),"\n",(0,o.jsxs)(s.p,{children:["The service network configuration. By default, Compose will add services to the ",(0,o.jsx)(s.code,{children:"default"})," network, which has external connectivity.\nYou can also add services to private networks. To avoid warnings, you should add them to the ",(0,o.jsxs)(s.a,{href:"#networks",children:["top-level ",(0,o.jsx)(s.code,{children:"networks"})]})," property as well."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'    networks:\n      default: # when not specified, services are assigned to the "default" network\n'})}),"\n",(0,o.jsxs)(s.p,{children:["You can also assign an alias for a network by using ",(0,o.jsx)(s.code,{children:"aliases"}),", as seen below:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    networks:\n      default:\n        aliases:\n          - app\n"})}),"\n",(0,o.jsxs)(s.p,{children:["See our ",(0,o.jsx)(s.a,{href:"/docs/concepts/networking",children:"Networking"})," page for more."]}),"\n",(0,o.jsx)(s.h3,{id:"restart",children:(0,o.jsx)(s.code,{children:"restart"})}),"\n",(0,o.jsx)(s.p,{children:"(Optional, but highly recommended)"}),"\n",(0,o.jsxs)(s.p,{children:["The restart mode for a container. Defaults to ",(0,o.jsx)(s.code,{children:"unless-stopped"})," unless otherwise specified."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:"    restart: unless-stopped\n"})}),"\n",(0,o.jsx)(s.h3,{id:"volumes-1",children:(0,o.jsx)(s.code,{children:"volumes"})}),"\n",(0,o.jsx)(s.p,{children:"(Not yet supported)"}),"\n",(0,o.jsx)(s.p,{children:"The volume mounts for a container, specific to a service. This feature is not currently supported by Defang."}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'    # volumes:\n    #  - "./backend:/app"\n'})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);